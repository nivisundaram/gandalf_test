c
n
records
n
exit
n
c
n
record.valid?
record
n
changed?
changed
n
changed?
n
c
n
current_context
n
s
n
s
n
changed?
n
changed?
n
c
exit
ap self.class.reflections.values.first
ap self.class.reflections.values.last
aw self.class.reflections.values.last
exit
require "awesome_print"
require "pretty_print"
pp _
self.class.reflections.values.first
self.class.reflections.first
x = self.send(:pets)
self
self.class.reflections
exit
n
records
s
n
exit
association.target
n
c
changed?
c
n
association.target
n
nn
n
association.target
association
n
exit
c
changed_attributes.any?
n
s
n
s
n
changed_attributes.any?
changed_attributes?
n
@new_record
@new_Record
s
n
s
n
association.target.last.changed?
association.target.first.changed?
association.target
association
n
c
exit
association.target
association
n
c
continue
c
exit
changed_attributes
n
@new_record
s
c
n
@new_record
s
tt.new_record?
c
n
c
continue
p.pets
dirty_objects
n
association_collection
n
c
n
c
n
c
n
d1
dirty_objects
n
association_collection
n
associations
n
exit
self
self.changes
n
c
n
self.changes
self
n
exit
self.changes
self
n
continue
p
@association_cache
Rails.cache
c.scope
c = self.class
self.scope
self
self.previous_changes
self.changes
n
self.changes
self
exit
ext
self.changes
self
n
exit
n
what_changed
n
associations
n
exit
Associations.association(:pets)
a.target
a.class
a= f[1]
f.class
f = self.class.reflections.select { |k, v| v.collection? }.first
self.class.reflections.select { |k, v| v.collection? }
n
exit
f.changes
f.changed?
f = c.first
c = self.send(:pets)
collection = self.send(:pets)
self.send(:pets)
self.send(pets)
self
associations.each do |name|
associations
n
associations
n
continue
n
p.pets
n
associations
n
continue
association_collection
n
c
continue
exit
self.changes
self
n
exit
what_changed
n
self.changes
self
n
associations
n
continue
n
what_changed
n
self.changes
n
what_changed
n
exit
self
self.changes
n
self
n
exit
n
c
n
c
p.pets.first.name = "chikku"
self.changed?
exit
self.changed?
self.changed>
n
self
n
associations
n
self.changes
self.previous_changes
self.name = "taty"
self
p
p.name = "taty"
self.previous_changes
self
exit
n
what_changed
n
item.what_changed?
item
s
what_changed
n
self
n
associations
n
